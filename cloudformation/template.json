{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS AKO 2020 session",

  "Parameters": {
    "AMIId" : {
      "Type" : "String",
      "Description": "AMI with Jenkins",
      "Default": "ami-025346349d769fcb4"
    },
    "InstanceType": {
      "Type" : "String",
      "Description" : "Instance type",
      "Default" : "m5.large"
    },
    "AmazonPrefixList": {
      "Type" : "String",
      "Description" : "CORP Prefix list for the region stack is running, from https://apll.corp.amazon.com/. Default is for eu-west-1",
      "Default" : "pl-01a74268"
    }
},
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16"
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref":"VPC" },
        "AvailabilityZone" : { "Fn::Sub" : "${AWS::Region}a" },
        "CidrBlock": "10.0.0.0/24"
      }
    },
    "PublicSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref":"VPC" },
        "AvailabilityZone" : { "Fn::Sub" : "${AWS::Region}b" },
        "CidrBlock": "10.0.1.0/24"
      }
    },
    "PrivateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref":"VPC" },
        "CidrBlock": "10.0.3.0/24"
      }
    },
    "InternetGateway": {
     "Type": "AWS::EC2::InternetGateway"
    },
    "InternetGatewayAttachment": {
     "Type": "AWS::EC2::VPCGatewayAttachment",
     "Properties": {
       "VpcId": {"Ref":"VPC"},
       "InternetGatewayId": {"Ref":"InternetGateway"}
     }
   },
   "RouteTable": {
     "Type": "AWS::EC2::RouteTable",
     "Properties": {
       "VpcId": {"Ref":"VPC"}
     }
   },
   "PrivateRouteTable": {
     "Type": "AWS::EC2::RouteTable",
     "Properties": {
       "VpcId": {"Ref":"VPC"}
     }
   },
   "Route": {
     "Type": "AWS::EC2::Route",
     "DependsOn": "InternetGatewayAttachment",
     "Properties": {
       "RouteTableId": {"Ref":"RouteTable"},
       "DestinationCidrBlock": "0.0.0.0/0",
       "GatewayId": {"Ref":"InternetGateway"}
    }
  },
  "SubnetRouteTableAssociationA": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "RouteTableId": {"Ref":"RouteTable"},
      "SubnetId": {"Ref":"PublicSubnetA"}
    }
  },
  "SubnetRouteTableAssociationB": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "RouteTableId": {"Ref":"RouteTable"},
      "SubnetId": {"Ref":"PublicSubnetB"}
    }
  },
  "PrivateSubnetRouteTableAssociation": {
    "Type": "AWS::EC2::SubnetRouteTableAssociation",
    "Properties": {
      "RouteTableId": {"Ref":"PrivateRouteTable"},
      "SubnetId": {"Ref":"PrivateSubnet"}
    }
  },
  "ALBSecurityGroup" : {
    "Type": "AWS::EC2::SecurityGroup",
    "Properties": {
      "VpcId": {"Ref":"VPC"},
      "GroupDescription":"Enable access to Jenkins ALB",
      "SecurityGroupIngress": [
        {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}
      ]
    }
  },
  "JenkinsSecurityGroup" : {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
     "VpcId": {"Ref":"VPC"},
     "GroupDescription":"Enable access to Jenkins",
     "SecurityGroupIngress": [
       {
        "IpProtocol" : "tcp",
        "FromPort" : "8080",
        "ToPort" : "8080",
        "SourceSecurityGroupId" : {"Fn::Select" : [0, {"Fn::GetAtt" : ["ApplicationLoadBalancer", "SecurityGroups"]}]}
      },
       {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "SourcePrefixListId": {"Ref":"AmazonPrefixList"} }
     ]
   }
  },
  "WebServerGroup" : {
    "Type" : "AWS::AutoScaling::AutoScalingGroup",
    "Properties" : {
      "VPCZoneIdentifier" : [ { "Ref" : "PublicSubnetA" }, { "Ref" : "PublicSubnetB" } ],
      "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
      "MinSize" : "1",
      "MaxSize" : "1",
      "TargetGroupARNs" : [ { "Ref" : "ALBTargetGroup" } ]
    },
    "CreationPolicy" : {
      "ResourceSignal" : {
        "Timeout" : "PT15M"
      }
    },
    "UpdatePolicy": {
      "AutoScalingRollingUpdate": {
        "MinInstancesInService": "1",
        "MaxBatchSize": "1",
        "PauseTime" : "PT15M",
        "WaitOnResourceSignals": "false"
      }
    }
  },
  "LaunchConfig" : {
    "Type" : "AWS::AutoScaling::LaunchConfiguration",
    "Metadata": {
      "Comment": "Install a simple application",
      "AWS::CloudFormation::Init": {
        "config": {
          "files": {
            "/etc/cfn/cfn-hup.conf": {
              "content": {
                "Fn::Join": [
                  "",
                  [
                    "[main]\n",
                    "stack=",
                    {
                      "Ref": "AWS::StackId"
                    },
                    "\n",
                    "region=",
                    {
                      "Ref": "AWS::Region"
                    },
                    "\n"
                  ]
                ]
              },
              "mode": "000400",
              "owner": "root",
              "group": "root"
            },
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
              "content": {
                "Fn::Join": [
                  "",
                  [
                    "[cfn-auto-reloader-hook]\n",
                    "triggers=post.update\n",
                    "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                    "action=/opt/aws/bin/cfn-init -v ",
                    "         --stack ",
                    {
                      "Ref": "AWS::StackName"
                    },
                    "         --resource LaunchConfig ",
                    "         --region ",
                    {
                      "Ref": "AWS::Region"
                    },
                    "\n",
                    "runas=root\n"
                  ]
                ]
              },
              "mode": "000400",
              "owner": "root",
              "group": "root"
            }
          },
          "services": {
            "sysvinit": {
              "cfn-hup": {
                "enabled": "true",
                "ensureRunning": "true",
                "files": [
                  "/etc/cfn/cfn-hup.conf",
                  "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                ]
              }
            }
          }
        }
      }
    },
    "Properties" : {
      "ImageId" : { "Ref": "AMIId" },
      "SecurityGroups" : [ { "Ref" : "JenkinsSecurityGroup" } ],
      "InstanceType" : { "Ref" : "InstanceType" },
      "AssociatePublicIpAddress" : "True",
      "UserData"       : { "Fn::Base64" : { "Fn::Join" : [
        "",
        [
           "#!/bin/bash -xe\n",
           "yum update -y aws-cfn-bootstrap\n",
           "/opt/aws/bin/cfn-init -v ",
           "         --stack ", { "Ref" : "AWS::StackName" },
           "         --resource LaunchConfig ",
           "         --region ", { "Ref" : "AWS::Region" },
           "\n",
           "/opt/aws/bin/cfn-signal -e $? ",
           "         --stack ", { "Ref" : "AWS::StackName" },
           "         --resource WebServerGroup ",
           "         --region ", { "Ref" : "AWS::Region" },
           "\n"
      ]]}}
    }
  },
	"ApplicationLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
        "Subnets" : [ { "Ref" : "PublicSubnetA" }, { "Ref": "PublicSubnetB"} ],
        "SecurityGroups" : [ { "Ref" : "ALBSecurityGroup" } ]
      }
  },
	    "ALBListener" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "ALBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref" : "ApplicationLoadBalancer" },
        "Port" : "80",
        "Protocol" : "HTTP"
      }
    },
    "ALBTargetGroup" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "HealthCheckIntervalSeconds" : 30,
        "HealthCheckTimeoutSeconds" : 5,
        "HealthyThresholdCount" : 3,
        "Port" : 8080,
        "Protocol" : "HTTP",
        "UnhealthyThresholdCount" : 5,
        "Matcher" : { "HttpCode": "200,403" },
        "VpcId" : {"Ref" : "VPC"}
      }
    },
  "BuildArtifacts" : {
    "Type" : "AWS::S3::Bucket"
  },
  "JenkinsIAMRole" : {
    "Type" : "AWS::IAM::Role",
    "Properties" : {
      "AssumeRolePolicyDocument" : {
        "Version": "2012-10-17",
        "Statement": [{
          "Effect": "Allow",
          "Principal": {
            "Service": ["ec2.amazonaws.com"]
          },
          "Action": ["sts:AssumeRole"]
        }]
      }
    }
  },
  "BuildArtifactsIAMPolicy" : {
    "Type" : "AWS::IAM::Policy",
    "Properties" : {
      "PolicyName" : "jenkins-buildartifacts",
      "PolicyDocument" : {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": ["s3:GetObject","s3:PutObject"],
            "Resource": [{
              "Fn::Join" : [ "", [
                "arn:aws:s3:::", {
                  "Ref" : "BuildArtifacts"
                },
                "/*"
              ]]
            }]
          }
        ]
      },
      "Roles" :[{"Ref": "JenkinsIAMRole"}]
    }
  },
  "JenkinsIAMInstanceProfile" : {
    "Type" : "AWS::IAM::InstanceProfile",
    "Properties" : {
      "Path" : "/",
      "Roles" : [{ "Ref" : "JenkinsIAMRole" }]
    }
  }
 },
 "Outputs": {
  "URL": {
    "Description": "Jenkins URL",
    "Value": {
      "Fn::Join": [
        "",
        [
          "http://",
          {
            "Fn::GetAtt": [
              "ApplicationLoadBalancer",
              "DNSName"
            ]
          }
        ]
      ]
    }
  }
}
}
